name: Build and Deploy

on:
  push:
    branches:
      - main

  repository_dispatch:
    types: [trigger-workflow]

permissions: write-all

env:
  HASH_FILE: build_hash

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.message != 'CI Update hash file' }}

    outputs:
      hash_content: ${{ steps.read_hash.outputs.hash_content }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
      - name: Checkout
        uses: actions/checkout@v4
      - name: Read HASH_FILE content
        id: read_hash
        run: |
          content=$(cat ${{ env.HASH_FILE }}) || true
          echo "hash_content=$content" >> "$GITHUB_OUTPUT"
  check:
    name: Check Should Rebuild
    runs-on: ubuntu-latest
    needs: prepare
    outputs:
      canceled: ${{ steps.use_content.outputs.canceled }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: futi-dev/futi-detroit-kaito-standalone
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
          lfs: true

      - name: Use content from prev job and compare
        id: use_content
        env:
          FILE_HASH: ${{ needs.prepare.outputs.hash_content }}
        run: |
          file_hash=$FILE_HASH
          current_hash=$(git rev-parse --short HEAD)
          echo "File Hash: $file_hash"
          echo "Current Git Hash: $current_hash"
          if [ "$file_hash" == "$current_hash" ]; then
            echo "Hashes match. Stopping workflow."
            echo "canceled=true" >> $GITHUB_OUTPUT
          else
            echo "Hashes do not match. Continuing workflow."
          fi

  deploy:
    name: Deploy Prod
    runs-on: ubuntu-latest
    needs: check
    if: ${{needs.check.outputs.canceled != 'true'}}

    outputs:
      sha_short: ${{ steps.store.outputs.sha_short }}
      branch: ${{ steps.store.outputs.branch }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: futi-dev/futi-detroit-kaito-standalone
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Log in to Container Registry (Aliyun TCR)
        uses: docker/login-action@v2
        with:
            registry: registry.cn-hangzhou.aliyuncs.com
            username: ${{ secrets.TCR_USERNAME }}
            password: ${{ secrets.TCR_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
            images: ${{ secrets.TCR_IMAGES }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
            context: .
            push: true
            tags: ${{ secrets.TCR_IMAGES }}:master
            labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.SERVER_IP }}
            username: root
            key: ${{ secrets.SERVER_SSH }}
            script: cd ~ && sh deploy-futi-detroit-kaito.sh

      - name: Store artifact commit version
        shell: bash
        id: store
        run: |
            sha_short=$(git rev-parse --short HEAD)
            branch_name=$(git rev-parse --abbrev-ref HEAD)
            echo "sha_short=$sha_short" >> "$GITHUB_OUTPUT"
            echo "branch=$branch_name" >> "$GITHUB_OUTPUT"

  store:
    name: Store artifact commit version
    runs-on: ubuntu-latest
    needs: [deploy]
    permissions:
        contents: write
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Use outputs from deploy
        env:
          SHA_SHORT: ${{ needs.deploy.outputs.sha_short }}
          BRANCH: ${{ needs.deploy.outputs.branch }}
        run: |
          echo "SHA Short from build: $SHA_SHORT"
          echo "Branch from build: $BRANCH"
      - name: Write hash to file
        env:
          SHA_SHORT: ${{ needs.deploy.outputs.sha_short }}

        run: echo $SHA_SHORT > ${{ env.HASH_FILE }}

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'CI Update hash file'
